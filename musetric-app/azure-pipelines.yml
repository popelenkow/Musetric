trigger:
  branches:
    include:
    - develop
    - release/v*
  paths:
    include:
    - 'musetric-app/*'

parameters:
- name: tag
  displayName: tag
  type: string
  values:
  - next
  - beta
  - latest
  default: next
- name: isNpmPublish
  type: boolean
  default: false
- name: isGithubPublish
  type: boolean
  default: false

variables:
  - name: root
    value: musetric-app
  - group: AccessTokens

pool:
  vmImage: 'ubuntu-16.04'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '12.18.4'
  displayName: 'node.js 12.18.4'

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.7'
  displayName: 'python 3.7'

- task: PythonScript@0
  inputs:
    scriptSource: inline
    script: |
      import json
      with open('package.json') as json_file:
        rawVersion = json.load(json_file)['version']

      isReleaseBranch = '$(Build.SourceBranch)'.startswith('refs/heads/release')
      print(f'isReleaseBranch {isReleaseBranch}')

      tag = f'${{parameters.tag}}'
      print(f'##vso[task.setvariable variable=tag]{tag}')
      print(f'tag {tag}')

      if tag == 'latest':
        version = rawVersion
      elif tag == 'beta':
        version = f'{rawVersion}-beta.$(Build.BuildID)'
      else:
        version = f'{rawVersion}-dev.$(Build.BuildID)'
      print(f'##vso[task.setvariable variable=version]{version}')
      print(f'version {version}')

      isNpmPublish = ${{parameters.isNpmPublish}}
      print(f'##vso[task.setvariable variable=isNpmPublish]{isNpmPublish}')
      print(f'isNpmPublish {isNpmPublish}')

      isGithubPublish = ${{parameters.isGithubPublish}}
      print(f'##vso[task.setvariable variable=isGithubPublish]{isGithubPublish}')
      print(f'isGithubPublish {isGithubPublish}')

      if tag == 'latest':
        isGithubRelease = True
      else:
        isGithubRelease = False
      print(f'##vso[task.setvariable variable=isGithubRelease]{isGithubRelease}')
      print(f'isGithubRelease {isGithubRelease}')
    workingDirectory: $(root)
  displayName: 'init variables'

- script: yarn version --new-version $(version) --no-git-tag-version
  workingDirectory: $(root)
  displayName: 'yarn version'

- script: yarn
  workingDirectory: $(root)
  displayName: 'yarn'

- script: yarn lint
  workingDirectory: $(root)
  displayName: 'yarn lint'

- script: yarn build
  workingDirectory: $(root)
  displayName: 'yarn build'

- script: |
    echo "Add token to npmrc"
    echo '//registry.npmjs.org/:_authToken=$(npmToken)' > .npmrc
    yarn publish --tag $(tag) --no-git-tag-version
  workingDirectory: $(root)/dist
  condition: and(succeeded(), eq(variables.isNpmPublish, true))
  displayName: 'npm publish'

- script: yarn pack
  workingDirectory: $(root)/dist
  condition: and(succeeded(), eq(variables.isGithubPublish, true))
  displayName: 'yarn pack'

- task: GitHubRelease@1
  inputs:
    title: musetric $(version)
    gitHubConnection: githubToken
    tagSource: userSpecifiedTag
    tag: v$(version)
    assets: '$(root)/dist/*.tgz'
    isDraft: true
    isPreRelease: $(isGithubRelease)
  condition: and(succeeded(), eq(variables.isGithubPublish, true))
  displayName: 'github publish'